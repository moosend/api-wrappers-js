/**
 * Moosend API
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CreatingACustomFieldRequest', 'model/CreatingACustomFieldResponse', 'model/CreatingAMailingListRequest', 'model/CreatingAMailingListResponse', 'model/DeletingAMailingListResponse', 'model/GettingAllActiveMailingListsResponse', 'model/GettingAllActiveMailingListsWithPagingResponse', 'model/GettingMailingListDetailsResponse', 'model/RemovingACustomFieldResponse', 'model/UpdatingACustomFieldRequest', 'model/UpdatingACustomFieldResponse', 'model/UpdatingAMailingListRequest', 'model/UpdatingAMailingListResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/CreatingACustomFieldRequest'), require('../model/CreatingACustomFieldResponse'), require('../model/CreatingAMailingListRequest'), require('../model/CreatingAMailingListResponse'), require('../model/DeletingAMailingListResponse'), require('../model/GettingAllActiveMailingListsResponse'), require('../model/GettingAllActiveMailingListsWithPagingResponse'), require('../model/GettingMailingListDetailsResponse'), require('../model/RemovingACustomFieldResponse'), require('../model/UpdatingACustomFieldRequest'), require('../model/UpdatingACustomFieldResponse'), require('../model/UpdatingAMailingListRequest'), require('../model/UpdatingAMailingListResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.MoosendApi) {
      root.MoosendApi = {};
    }
    root.MoosendApi.MailingListsApi = factory(root.MoosendApi.ApiClient, root.MoosendApi.CreatingACustomFieldRequest, root.MoosendApi.CreatingACustomFieldResponse, root.MoosendApi.CreatingAMailingListRequest, root.MoosendApi.CreatingAMailingListResponse, root.MoosendApi.DeletingAMailingListResponse, root.MoosendApi.GettingAllActiveMailingListsResponse, root.MoosendApi.GettingAllActiveMailingListsWithPagingResponse, root.MoosendApi.GettingMailingListDetailsResponse, root.MoosendApi.RemovingACustomFieldResponse, root.MoosendApi.UpdatingACustomFieldRequest, root.MoosendApi.UpdatingACustomFieldResponse, root.MoosendApi.UpdatingAMailingListRequest, root.MoosendApi.UpdatingAMailingListResponse);
  }
}(this, function(ApiClient, CreatingACustomFieldRequest, CreatingACustomFieldResponse, CreatingAMailingListRequest, CreatingAMailingListResponse, DeletingAMailingListResponse, GettingAllActiveMailingListsResponse, GettingAllActiveMailingListsWithPagingResponse, GettingMailingListDetailsResponse, RemovingACustomFieldResponse, UpdatingACustomFieldRequest, UpdatingACustomFieldResponse, UpdatingAMailingListRequest, UpdatingAMailingListResponse) {
  'use strict';

  /**
   * MailingLists service.
   * @module api/MailingListsApi
   * @version 1.0
   */

  /**
   * Constructs a new MailingListsApi. 
   * @alias module:api/MailingListsApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the creatingACustomField operation.
     * @callback module:api/MailingListsApi~creatingACustomFieldCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreatingACustomFieldResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creating a custom field
     * Creates a new custom field in the specified mailing list.
     * @param {module:model/String} format 
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {String} mailingListID The ID of the mailing list where the custom field will belong.
     * @param {module:model/CreatingACustomFieldRequest} body 
     * @param {module:api/MailingListsApi~creatingACustomFieldCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreatingACustomFieldResponse}
     */
    this.creatingACustomField = function(format, apikey, mailingListID, body, callback) {
      var postBody = body;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling creatingACustomField");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling creatingACustomField");
      }

      // verify the required parameter 'mailingListID' is set
      if (mailingListID === undefined || mailingListID === null) {
        throw new Error("Missing the required parameter 'mailingListID' when calling creatingACustomField");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling creatingACustomField");
      }


      var pathParams = {
        'Format': format,
        'MailingListID': mailingListID
      };
      var queryParams = {
        'apikey': apikey
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = CreatingACustomFieldResponse;

      return this.apiClient.callApi(
        '/lists/{MailingListID}/customfields/create.{Format}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the creatingAMailingList operation.
     * @callback module:api/MailingListsApi~creatingAMailingListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CreatingAMailingListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creating a mailing list
     * Creates a new empty mailing list in your account.
     * @param {module:model/String} format 
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {module:model/CreatingAMailingListRequest} body 
     * @param {module:api/MailingListsApi~creatingAMailingListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CreatingAMailingListResponse}
     */
    this.creatingAMailingList = function(format, apikey, body, callback) {
      var postBody = body;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling creatingAMailingList");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling creatingAMailingList");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling creatingAMailingList");
      }


      var pathParams = {
        'Format': format
      };
      var queryParams = {
        'apikey': apikey
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = CreatingAMailingListResponse;

      return this.apiClient.callApi(
        '/lists/create.{Format}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deletingAMailingList operation.
     * @callback module:api/MailingListsApi~deletingAMailingListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DeletingAMailingListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deleting a mailing list
     * Deletes a mailing list from your account.
     * @param {module:model/String} format 
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {String} mailingListID The ID of the mailing list to be deleted.
     * @param {module:api/MailingListsApi~deletingAMailingListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DeletingAMailingListResponse}
     */
    this.deletingAMailingList = function(format, apikey, mailingListID, callback) {
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling deletingAMailingList");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling deletingAMailingList");
      }

      // verify the required parameter 'mailingListID' is set
      if (mailingListID === undefined || mailingListID === null) {
        throw new Error("Missing the required parameter 'mailingListID' when calling deletingAMailingList");
      }


      var pathParams = {
        'Format': format,
        'MailingListID': mailingListID
      };
      var queryParams = {
        'apikey': apikey
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = DeletingAMailingListResponse;

      return this.apiClient.callApi(
        '/lists/{MailingListID}/delete.{Format}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the gettingAllActiveMailingLists operation.
     * @callback module:api/MailingListsApi~gettingAllActiveMailingListsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GettingAllActiveMailingListsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting all active mailing lists
     * Gets a list of your active mailing lists in your account.
     * @param {module:model/String} format 
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.withStatistics Specifies whether to fetch statistics for the subscribers or not. If omitted, results will be returned with statistics by default.
     * @param {module:model/String} opts.shortBy The name of the campaign property to sort results by. If not specified, results will be sorted by the CreatedOn property
     * @param {module:model/String} opts.sortMethod The method to sort results: ASC for ascending, DESC for descending. If not specified, &#x60;ASC&#x60; will be assumed
     * @param {module:api/MailingListsApi~gettingAllActiveMailingListsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GettingAllActiveMailingListsResponse}
     */
    this.gettingAllActiveMailingLists = function(format, apikey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling gettingAllActiveMailingLists");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling gettingAllActiveMailingLists");
      }


      var pathParams = {
        'Format': format
      };
      var queryParams = {
        'apikey': apikey,
        'WithStatistics': opts['withStatistics'],
        'ShortBy': opts['shortBy'],
        'SortMethod': opts['sortMethod']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GettingAllActiveMailingListsResponse;

      return this.apiClient.callApi(
        '/lists.{Format}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the gettingAllActiveMailingListsWithPaging operation.
     * @callback module:api/MailingListsApi~gettingAllActiveMailingListsWithPagingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GettingAllActiveMailingListsWithPagingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting all active mailing lists with paging
     * Gets a list of your active mailing lists in your account. Because the results for this call could be quite big, paging information is required as input.
     * @param {module:model/String} format 
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {Number} page The page that you want to get.
     * @param {Number} pageSize Lists Per Page.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.shortBy The name of the campaign property to sort results by. If not specified, results will be sorted by the CreatedOn property
     * @param {module:model/String} opts.sortMethod The method to sort results: ASC for ascending, DESC for descending. If not specified, &#x60;ASC&#x60; will be assumed
     * @param {module:api/MailingListsApi~gettingAllActiveMailingListsWithPagingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GettingAllActiveMailingListsWithPagingResponse}
     */
    this.gettingAllActiveMailingListsWithPaging = function(format, apikey, page, pageSize, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling gettingAllActiveMailingListsWithPaging");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling gettingAllActiveMailingListsWithPaging");
      }

      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling gettingAllActiveMailingListsWithPaging");
      }

      // verify the required parameter 'pageSize' is set
      if (pageSize === undefined || pageSize === null) {
        throw new Error("Missing the required parameter 'pageSize' when calling gettingAllActiveMailingListsWithPaging");
      }


      var pathParams = {
        'Format': format,
        'Page': page,
        'PageSize': pageSize
      };
      var queryParams = {
        'apikey': apikey,
        'ShortBy': opts['shortBy'],
        'SortMethod': opts['sortMethod']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GettingAllActiveMailingListsWithPagingResponse;

      return this.apiClient.callApi(
        '/lists/{Page}/{PageSize}.{Format}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the gettingMailingListDetails operation.
     * @callback module:api/MailingListsApi~gettingMailingListDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GettingMailingListDetailsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Getting mailing list details
     * Gets details for a given mailing list. You may include subscriber statistics in your results or not. Any segments existing for the requested mailing list will not be included in the results.
     * @param {module:model/String} format 
     * @param {String} mailingListID The ID of the mailing list to be returned.
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.withStatistics Specifies whether to fetch statistics for the subscribers or not. If omitted, results will be returned with statistics by default.
     * @param {module:api/MailingListsApi~gettingMailingListDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GettingMailingListDetailsResponse}
     */
    this.gettingMailingListDetails = function(format, mailingListID, apikey, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling gettingMailingListDetails");
      }

      // verify the required parameter 'mailingListID' is set
      if (mailingListID === undefined || mailingListID === null) {
        throw new Error("Missing the required parameter 'mailingListID' when calling gettingMailingListDetails");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling gettingMailingListDetails");
      }


      var pathParams = {
        'Format': format,
        'MailingListID': mailingListID
      };
      var queryParams = {
        'apikey': apikey,
        'WithStatistics': opts['withStatistics']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = GettingMailingListDetailsResponse;

      return this.apiClient.callApi(
        '/lists/{MailingListID}/details.{Format}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the removingACustomField operation.
     * @callback module:api/MailingListsApi~removingACustomFieldCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RemovingACustomFieldResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Removing a custom field
     * Removes a custom field definition from the specified mailing list.
     * @param {module:model/String} format 
     * @param {String} customFieldID The ID of the custom field to be deleted.
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {String} mailingListID The ID of the mailing list where the custom field belongs.
     * @param {module:api/MailingListsApi~removingACustomFieldCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RemovingACustomFieldResponse}
     */
    this.removingACustomField = function(format, customFieldID, apikey, mailingListID, callback) {
      var postBody = null;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling removingACustomField");
      }

      // verify the required parameter 'customFieldID' is set
      if (customFieldID === undefined || customFieldID === null) {
        throw new Error("Missing the required parameter 'customFieldID' when calling removingACustomField");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling removingACustomField");
      }

      // verify the required parameter 'mailingListID' is set
      if (mailingListID === undefined || mailingListID === null) {
        throw new Error("Missing the required parameter 'mailingListID' when calling removingACustomField");
      }


      var pathParams = {
        'Format': format,
        'CustomFieldID': customFieldID,
        'MailingListID': mailingListID
      };
      var queryParams = {
        'apikey': apikey
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = RemovingACustomFieldResponse;

      return this.apiClient.callApi(
        '/lists/{MailingListID}/customfields/{CustomFieldID}/delete.{Format}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updatingACustomField operation.
     * @callback module:api/MailingListsApi~updatingACustomFieldCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdatingACustomFieldResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updating a custom field
     * Updates the properties of an existing custom field in the specified mailing list.
     * @param {module:model/String} format 
     * @param {String} customFieldID The ID of the custom field to be updated.
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {String} mailingListID The ID of the mailing list where the custom field belongs.
     * @param {module:model/UpdatingACustomFieldRequest} body 
     * @param {module:api/MailingListsApi~updatingACustomFieldCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdatingACustomFieldResponse}
     */
    this.updatingACustomField = function(format, customFieldID, apikey, mailingListID, body, callback) {
      var postBody = body;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling updatingACustomField");
      }

      // verify the required parameter 'customFieldID' is set
      if (customFieldID === undefined || customFieldID === null) {
        throw new Error("Missing the required parameter 'customFieldID' when calling updatingACustomField");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling updatingACustomField");
      }

      // verify the required parameter 'mailingListID' is set
      if (mailingListID === undefined || mailingListID === null) {
        throw new Error("Missing the required parameter 'mailingListID' when calling updatingACustomField");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updatingACustomField");
      }


      var pathParams = {
        'Format': format,
        'CustomFieldID': customFieldID,
        'MailingListID': mailingListID
      };
      var queryParams = {
        'apikey': apikey
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = UpdatingACustomFieldResponse;

      return this.apiClient.callApi(
        '/lists/{MailingListID}/customfields/{CustomFieldID}/update.{Format}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updatingAMailingList operation.
     * @callback module:api/MailingListsApi~updatingAMailingListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdatingAMailingListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updating a mailing list
     * Updates the properties of an existing mailing list.
     * @param {module:model/String} format 
     * @param {String} apikey You may find your API Key or generate a new one in your account settings.
     * @param {String} mailingListID The ID of the mailing list to be updated.
     * @param {module:model/UpdatingAMailingListRequest} body 
     * @param {module:api/MailingListsApi~updatingAMailingListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdatingAMailingListResponse}
     */
    this.updatingAMailingList = function(format, apikey, mailingListID, body, callback) {
      var postBody = body;

      // verify the required parameter 'format' is set
      if (format === undefined || format === null) {
        throw new Error("Missing the required parameter 'format' when calling updatingAMailingList");
      }

      // verify the required parameter 'apikey' is set
      if (apikey === undefined || apikey === null) {
        throw new Error("Missing the required parameter 'apikey' when calling updatingAMailingList");
      }

      // verify the required parameter 'mailingListID' is set
      if (mailingListID === undefined || mailingListID === null) {
        throw new Error("Missing the required parameter 'mailingListID' when calling updatingAMailingList");
      }

      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updatingAMailingList");
      }


      var pathParams = {
        'Format': format,
        'MailingListID': mailingListID
      };
      var queryParams = {
        'apikey': apikey
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = UpdatingAMailingListResponse;

      return this.apiClient.callApi(
        '/lists/{MailingListID}/update.{Format}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
