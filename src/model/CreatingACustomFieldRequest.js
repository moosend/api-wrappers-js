/**
 * Moosend API
 * TODO: Add a description
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MoosendApi) {
      root.MoosendApi = {};
    }
    root.MoosendApi.CreatingACustomFieldRequest = factory(root.MoosendApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The CreatingACustomFieldRequest model module.
   * @module model/CreatingACustomFieldRequest
   * @version 1.0
   */

  /**
   * Constructs a new <code>CreatingACustomFieldRequest</code>.
   * @alias module:model/CreatingACustomFieldRequest
   * @class
   * @param name {String} The name of the custom field.
   */
  var exports = function(name) {
    var _this = this;

    _this['Name'] = name;



  };

  /**
   * Constructs a <code>CreatingACustomFieldRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreatingACustomFieldRequest} obj Optional instance to populate.
   * @return {module:model/CreatingACustomFieldRequest} The populated <code>CreatingACustomFieldRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Name')) {
        obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
      }
      if (data.hasOwnProperty('CustomFieldType')) {
        obj['CustomFieldType'] = ApiClient.convertToType(data['CustomFieldType'], 'String');
      }
      if (data.hasOwnProperty('Options')) {
        obj['Options'] = ApiClient.convertToType(data['Options'], 'String');
      }
      if (data.hasOwnProperty('IsRequired')) {
        obj['IsRequired'] = ApiClient.convertToType(data['IsRequired'], 'String');
      }
    }
    return obj;
  }

  /**
   * The name of the custom field.
   * @member {String} Name
   */
  exports.prototype['Name'] = undefined;
  /**
   * Specifies the data type of the custom field. This must be one of the following values. If omitted, Text will be assumed. * `Text` * `Decimal` * `DateTime` * `SingleSelectDropdown` * `Integer` * `CheckBox`
   * @member {String} CustomFieldType
   */
  exports.prototype['CustomFieldType'] = undefined;
  /**
   * If you want to create a custom field of type SingleSelectDropdown, you must set this parameter to specify the available options for the user to choose from. Use a comma (,) to separate different options.
   * @member {String} Options
   */
  exports.prototype['Options'] = undefined;
  /**
   * Specify whether this is field will be mandatory on not, when being used in a subscription form. You should specify a value of either true or false. If omitted, false will be assumed.
   * @member {String} IsRequired
   */
  exports.prototype['IsRequired'] = undefined;



  return exports;
}));


